const std = @import("std");

// @python
// def process(d, x):
//     x_shifted = numpy.insert(x, 0, numpy.complex64())[:len(x)]
//     tmp = x * numpy.conj(x_shifted)
//     return (numpy.arctan2(numpy.imag(tmp), numpy.real(tmp)) / (numpy.pi * d)).astype(numpy.float32)
//
// x = random_complex64(64)
// vector("input_complexfloat32", x)
// vector("output_modulation_index_0_2", process(0.2, x))
// vector("output_modulation_index_0_4", process(0.4, x))
// @python

////////////////////////////////////////////////////////////////////////////////
// Auto-generated code below, do not edit!
////////////////////////////////////////////////////////////////////////////////

// @autogenerated

pub const input_complexfloat32 = [64]std.math.Complex(f32){ .{ .re = -0.73127151, .im = 0.69486749 }, .{ .re = 0.52754927, .im = -0.48986191 }, .{ .re = -0.00912983, .im = -0.10101787 }, .{ .re = 0.30318594, .im = 0.57744670 }, .{ .re = -0.81228077, .im = -0.94330502 }, .{ .re = 0.67153019, .im = -0.13446586 }, .{ .re = 0.52456015, .im = -0.99578792 }, .{ .re = -0.10922561, .im = 0.44308007 }, .{ .re = -0.54247558, .im = 0.89054137 }, .{ .re = 0.80285490, .im = -0.93882000 }, .{ .re = -0.94910830, .im = 0.08282494 }, .{ .re = 0.87829834, .im = -0.23759152 }, .{ .re = -0.56680119, .im = -0.15576684 }, .{ .re = -0.94191837, .im = -0.55661666 }, .{ .re = -0.12422481, .im = -0.00837552 }, .{ .re = -0.53383112, .im = -0.53826690 }, .{ .re = -0.56243795, .im = -0.08079307 }, .{ .re = -0.42043677, .im = -0.95702058 }, .{ .re = 0.67515594, .im = 0.11290865 }, .{ .re = 0.28458872, .im = -0.62818748 }, .{ .re = 0.98508680, .im = 0.71989304 }, .{ .re = -0.75822008, .im = -0.33460963 }, .{ .re = 0.44296879, .im = 0.42238355 }, .{ .re = 0.87288117, .im = -0.15578599 }, .{ .re = 0.66007137, .im = 0.34061113 }, .{ .re = -0.39326301, .im = 0.17516121 }, .{ .re = 0.76495802, .im = 0.69239485 }, .{ .re = 0.01056764, .im = 0.17800452 }, .{ .re = -0.93094832, .im = -0.51452005 }, .{ .re = 0.59480852, .im = -0.17137200 }, .{ .re = -0.65398520, .im = 0.09759752 }, .{ .re = 0.40608153, .im = 0.34897169 }, .{ .re = -0.25059396, .im = -0.12207674 }, .{ .re = 0.01685298, .im = 0.55688524 }, .{ .re = 0.04187684, .im = -0.21348982 }, .{ .re = -0.02061296, .im = -0.94085008 }, .{ .re = -0.91302544, .im = 0.40676415 }, .{ .re = 0.96637541, .im = 0.18636747 }, .{ .re = -0.21280062, .im = -0.65930158 }, .{ .re = 0.00447712, .im = 0.96415329 }, .{ .re = 0.54104626, .im = 0.07923490 }, .{ .re = 0.72057962, .im = -0.53564775 }, .{ .re = 0.02754333, .im = 0.90493482 }, .{ .re = 0.15558961, .im = -0.08173654 }, .{ .re = -0.46144104, .im = 0.09599262 }, .{ .re = 0.91423255, .im = -0.98858166 }, .{ .re = 0.56731045, .im = 0.64097184 }, .{ .re = 0.77235913, .im = 0.48100683 }, .{ .re = 0.61827981, .im = 0.03735657 }, .{ .re = 0.12271573, .im = -0.14781864 }, .{ .re = -0.88775343, .im = 0.74002033 }, .{ .re = 0.13999867, .im = -0.60032117 }, .{ .re = 0.00944094, .im = -0.03014978 }, .{ .re = -0.28642008, .im = -0.30784416 }, .{ .re = 0.07695759, .im = 0.24697889 }, .{ .re = 0.22490492, .im = -0.08370640 }, .{ .re = -0.94405001, .im = -0.54078996 }, .{ .re = -0.64557749, .im = 0.16892174 }, .{ .re = 0.72201771, .im = 0.59687787 }, .{ .re = 0.59419513, .im = 0.63287473 }, .{ .re = -0.48941192, .im = 0.68348968 }, .{ .re = 0.34622705, .im = -0.83353174 }, .{ .re = -0.96661872, .im = -0.97087997 }, .{ .re = 0.51117355, .im = -0.50088155 } };
pub const output_modulation_index_0_2 = [64]f32{ 0.00000000, -4.98168945, -1.45237970, 4.37396479, 4.63804865, 3.31690907, -1.41382325, 4.61302233, 0.48610175, -4.74476576, -3.76454329, 4.71806526, -4.15267992, 0.42261079, -0.74231493, 1.14944124, -1.02951539, 1.61413133, 3.42251897, -2.08671904, 2.82741642, 4.65703630, -4.44930601, -1.49323642, 1.03927600, 3.57491302, -3.16227913, 1.23480439, 3.39795065, 3.74996948, -4.78931999, -3.63437581, 4.59162331, -3.26962280, -4.64357471, -0.34313795, -3.13217998, -4.02974510, -3.30010986, -4.51049185, -2.26117611, -1.24880874, 3.46894860, -3.22141981, -4.55658436, 4.01427555, 2.65906191, -0.46041617, -0.79044574, -1.49330330, -4.70869064, 3.97059155, 0.11833402, -1.67562330, -4.28809786, -2.58632588, -3.60498977, -1.23525238, -3.49324632, 0.20071122, 2.18886185, 4.63756084, -1.87307477, 2.51268411 };
pub const output_modulation_index_0_4 = [64]f32{ 0.00000000, -2.49084473, -0.72618985, 2.18698239, 2.31902432, 1.65845454, -0.70691162, 2.30651116, 0.24305087, -2.37238288, -1.88227165, 2.35903263, -2.07633996, 0.21130539, -0.37115747, 0.57472062, -0.51475769, 0.80706567, 1.71125948, -1.04335952, 1.41370821, 2.32851815, -2.22465301, -0.74661821, 0.51963800, 1.78745651, -1.58113956, 0.61740220, 1.69897532, 1.87498474, -2.39466000, -1.81718791, 2.29581165, -1.63481140, -2.32178736, -0.17156897, -1.56608999, -2.01487255, -1.65005493, -2.25524592, -1.13058805, -0.62440437, 1.73447430, -1.61070991, -2.27829218, 2.00713778, 1.32953095, -0.23020808, -0.39522287, -0.74665165, -2.35434532, 1.98529577, 0.05916701, -0.83781165, -2.14404893, -1.29316294, -1.80249488, -0.61762619, -1.74662316, 0.10035561, 1.09443092, 2.31878042, -0.93653738, 1.25634205 };
