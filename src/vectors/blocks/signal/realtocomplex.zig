const std = @import("std");

// @python
// def process(x):
//     return numpy.array(x, dtype=numpy.complex64)
//
// x = random_float32(16)
// vector("input_float32", x)
// vector("output_complexfloat32", process(x))
// @python

////////////////////////////////////////////////////////////////////////////////
// Auto-generated code below, do not edit!
////////////////////////////////////////////////////////////////////////////////

// @autogenerated

pub const input_float32 = [16]f32{ -0.73127151, 0.69486749, 0.52754927, -0.48986191, -0.00912983, -0.10101787, 0.30318594, 0.57744670, -0.81228077, -0.94330502, 0.67153019, -0.13446586, 0.52456015, -0.99578792, -0.10922561, 0.44308007 };
pub const output_complexfloat32 = [16]std.math.Complex(f32){ .{ .re = -0.73127151, .im = 0.00000000 }, .{ .re = 0.69486749, .im = 0.00000000 }, .{ .re = 0.52754927, .im = 0.00000000 }, .{ .re = -0.48986191, .im = 0.00000000 }, .{ .re = -0.00912983, .im = 0.00000000 }, .{ .re = -0.10101787, .im = 0.00000000 }, .{ .re = 0.30318594, .im = 0.00000000 }, .{ .re = 0.57744670, .im = 0.00000000 }, .{ .re = -0.81228077, .im = 0.00000000 }, .{ .re = -0.94330502, .im = 0.00000000 }, .{ .re = 0.67153019, .im = 0.00000000 }, .{ .re = -0.13446586, .im = 0.00000000 }, .{ .re = 0.52456015, .im = 0.00000000 }, .{ .re = -0.99578792, .im = 0.00000000 }, .{ .re = -0.10922561, .im = 0.00000000 }, .{ .re = 0.44308007, .im = 0.00000000 } };
