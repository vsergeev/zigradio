const std = @import("std");

// @python
// def process(invert, x):
//     return numpy.logical_xor(numpy.logical_xor(numpy.insert(x, 0, False)[:-1], x), invert)
//
// x = random_bit(32)
// vector("input", x)
// vector("output_non_inverted", process(False, x))
// vector("output_inverted", process(True, x))
// @python

////////////////////////////////////////////////////////////////////////////////
// Auto-generated code below, do not edit!
////////////////////////////////////////////////////////////////////////////////

// @autogenerated

pub const input = [32]u1{ 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0 };
pub const output_non_inverted = [32]u1{ 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1 };
pub const output_inverted = [32]u1{ 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0 };
