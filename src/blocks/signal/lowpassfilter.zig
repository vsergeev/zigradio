const std = @import("std");

const Block = @import("../../radio.zig").Block;
const ProcessResult = @import("../../radio.zig").ProcessResult;

const _FIRFilterBlock = @import("./firfilter.zig")._FIRFilterBlock;

const WindowFunction = @import("../../radio.zig").utils.window.WindowFunction;
const firwinLowpass = @import("../../radio.zig").utils.filter.firwinLowpass;

////////////////////////////////////////////////////////////////////////////////
// Lowpass Filter Block
////////////////////////////////////////////////////////////////////////////////

pub fn LowpassFilterBlock(comptime T: type, comptime N: comptime_int) type {
    return struct {
        const Context = @This();

        pub const Options = struct {
            nyquist: ?f32 = null,
            window: WindowFunction = WindowFunction.Hamming,
        };

        cutoff: f32,
        options: Options,

        pub fn init(cutoff: f32, options: Options) _FIRFilterBlock(T, N, Context) {
            return _FIRFilterBlock(T, N, Context).init(Context{ .cutoff = cutoff, .options = options });
        }

        pub fn initialize(self: *_FIRFilterBlock(T, N, Context), _: std.mem.Allocator) !void {
            // Compute Nyquist frequency
            const nyquist = self.context.options.nyquist orelse try self.block.getRate(f32) / 2;

            // Generate taps
            self.taps = firwinLowpass(N, self.context.cutoff / nyquist, self.context.options.window);
        }
    };
}

////////////////////////////////////////////////////////////////////////////////
// Tests
////////////////////////////////////////////////////////////////////////////////

const BlockTester = @import("radio").testing.BlockTester;

test "LowpassFilterBlock" {
    // 128 taps, 0.2 cutoff, 256 ComplexFloat32 input, 256 ComplexFloat32 output
    {
        var block = LowpassFilterBlock(std.math.Complex(f32), 128).init(0.2, .{});
        var tester = BlockTester.init(&block.block, 1e-6);
        try tester.check(2, &[1]type{
            std.math.Complex(f32),
        }, .{&[64]std.math.Complex(f32){ .{ .re = -0.73127151, .im = 0.69486749 }, .{ .re = 0.52754927, .im = -0.48986191 }, .{ .re = -0.00912983, .im = -0.10101787 }, .{ .re = 0.30318594, .im = 0.57744670 }, .{ .re = -0.81228077, .im = -0.94330502 }, .{ .re = 0.67153019, .im = -0.13446586 }, .{ .re = 0.52456015, .im = -0.99578792 }, .{ .re = -0.10922561, .im = 0.44308007 }, .{ .re = -0.54247558, .im = 0.89054137 }, .{ .re = 0.80285490, .im = -0.93882000 }, .{ .re = -0.94910830, .im = 0.08282494 }, .{ .re = 0.87829834, .im = -0.23759152 }, .{ .re = -0.56680119, .im = -0.15576684 }, .{ .re = -0.94191837, .im = -0.55661666 }, .{ .re = -0.12422481, .im = -0.00837552 }, .{ .re = -0.53383112, .im = -0.53826690 }, .{ .re = -0.56243795, .im = -0.08079307 }, .{ .re = -0.42043677, .im = -0.95702058 }, .{ .re = 0.67515594, .im = 0.11290865 }, .{ .re = 0.28458872, .im = -0.62818748 }, .{ .re = 0.98508680, .im = 0.71989304 }, .{ .re = -0.75822008, .im = -0.33460963 }, .{ .re = 0.44296879, .im = 0.42238355 }, .{ .re = 0.87288117, .im = -0.15578599 }, .{ .re = 0.66007137, .im = 0.34061113 }, .{ .re = -0.39326301, .im = 0.17516121 }, .{ .re = 0.76495802, .im = 0.69239485 }, .{ .re = 0.01056764, .im = 0.17800452 }, .{ .re = -0.93094832, .im = -0.51452005 }, .{ .re = 0.59480852, .im = -0.17137200 }, .{ .re = -0.65398520, .im = 0.09759752 }, .{ .re = 0.40608153, .im = 0.34897169 }, .{ .re = -0.25059396, .im = -0.12207674 }, .{ .re = 0.01685298, .im = 0.55688524 }, .{ .re = 0.04187684, .im = -0.21348982 }, .{ .re = -0.02061296, .im = -0.94085008 }, .{ .re = -0.91302544, .im = 0.40676415 }, .{ .re = 0.96637541, .im = 0.18636747 }, .{ .re = -0.21280062, .im = -0.65930158 }, .{ .re = 0.00447712, .im = 0.96415329 }, .{ .re = 0.54104626, .im = 0.07923490 }, .{ .re = 0.72057962, .im = -0.53564775 }, .{ .re = 0.02754333, .im = 0.90493482 }, .{ .re = 0.15558961, .im = -0.08173654 }, .{ .re = -0.46144104, .im = 0.09599262 }, .{ .re = 0.91423255, .im = -0.98858166 }, .{ .re = 0.56731045, .im = 0.64097184 }, .{ .re = 0.77235913, .im = 0.48100683 }, .{ .re = 0.61827981, .im = 0.03735657 }, .{ .re = 0.12271573, .im = -0.14781864 }, .{ .re = -0.88775343, .im = 0.74002033 }, .{ .re = 0.13999867, .im = -0.60032117 }, .{ .re = 0.00944094, .im = -0.03014978 }, .{ .re = -0.28642008, .im = -0.30784416 }, .{ .re = 0.07695759, .im = 0.24697889 }, .{ .re = 0.22490492, .im = -0.08370640 }, .{ .re = -0.94405001, .im = -0.54078996 }, .{ .re = -0.64557749, .im = 0.16892174 }, .{ .re = 0.72201771, .im = 0.59687787 }, .{ .re = 0.59419513, .im = 0.63287473 }, .{ .re = -0.48941192, .im = 0.68348968 }, .{ .re = 0.34622705, .im = -0.83353174 }, .{ .re = -0.96661872, .im = -0.97087997 }, .{ .re = 0.51117355, .im = -0.50088155 } }}, &[1]type{
            std.math.Complex(f32),
        }, .{&[64]std.math.Complex(f32){ .{ .re = -0.00023701, .im = 0.00022521 }, .{ .re = -0.00012876, .im = 0.00012605 }, .{ .re = -0.00003832, .im = 0.00000554 }, .{ .re = 0.00017501, .im = 0.00007320 }, .{ .re = 0.00003821, .im = -0.00027358 }, .{ .re = 0.00021253, .im = -0.00046078 }, .{ .re = 0.00039584, .im = -0.00079003 }, .{ .re = 0.00032288, .im = -0.00055254 }, .{ .re = -0.00005640, .im = 0.00016208 }, .{ .re = -0.00012612, .im = 0.00047162 }, .{ .re = -0.00058799, .im = 0.00081370 }, .{ .re = -0.00044871, .im = 0.00079600 }, .{ .re = -0.00041631, .im = 0.00042767 }, .{ .re = -0.00041376, .im = -0.00035860 }, .{ .re = -0.00011461, .im = -0.00107882 }, .{ .re = 0.00013586, .im = -0.00168036 }, .{ .re = 0.00026203, .im = -0.00164509 }, .{ .re = 0.00022746, .im = -0.00120906 }, .{ .re = 0.00034237, .im = 0.00002044 }, .{ .re = 0.00028126, .im = 0.00125953 }, .{ .re = 0.00033766, .im = 0.00252661 }, .{ .re = -0.00014690, .im = 0.00271391 }, .{ .re = -0.00037905, .im = 0.00194511 }, .{ .re = -0.00026401, .im = 0.00006551 }, .{ .re = 0.00005907, .im = -0.00206803 }, .{ .re = 0.00018282, .im = -0.00371444 }, .{ .re = 0.00058323, .im = -0.00388106 }, .{ .re = 0.00073618, .im = -0.00247039 }, .{ .re = 0.00036464, .im = 0.00006533 }, .{ .re = 0.00018453, .im = 0.00307636 }, .{ .re = -0.00036439, .im = 0.00539687 }, .{ .re = -0.00061775, .im = 0.00595023 }, .{ .re = -0.00083967, .im = 0.00400075 }, .{ .re = -0.00077344, .im = 0.00024541 }, .{ .re = -0.00043756, .im = -0.00438564 }, .{ .re = 0.00006402, .im = -0.00820586 }, .{ .re = 0.00030328, .im = -0.00893902 }, .{ .re = 0.00092444, .im = -0.00608506 }, .{ .re = 0.00108020, .im = -0.00052476 }, .{ .re = 0.00089430, .im = 0.00651234 }, .{ .re = 0.00053330, .im = 0.01180959 }, .{ .re = 0.00008084, .im = 0.01285764 }, .{ .re = -0.00055890, .im = 0.00915164 }, .{ .re = -0.00100945, .im = 0.00095204 }, .{ .re = -0.00127804, .im = -0.00885021 }, .{ .re = -0.00069304, .im = -0.01684842 }, .{ .re = 0.00029071, .im = -0.01877678 }, .{ .re = 0.00141755, .im = -0.01319268 }, .{ .re = 0.00213282, .im = -0.00130948 }, .{ .re = 0.00191643, .im = 0.01303564 }, .{ .re = 0.00046880, .im = 0.02467461 }, .{ .re = -0.00124476, .im = 0.02775581 }, .{ .re = -0.00260303, .im = 0.01985212 }, .{ .re = -0.00282133, .im = 0.00197031 }, .{ .re = -0.00119216, .im = -0.02024998 }, .{ .re = 0.00203678, .im = -0.03871294 }, .{ .re = 0.00516054, .im = -0.04499273 }, .{ .re = 0.00631715, .im = -0.03315052 }, .{ .re = 0.00347450, .im = -0.00309307 }, .{ .re = -0.00556327, .im = 0.03854454 }, .{ .re = -0.02147542, .im = 0.07975526 }, .{ .re = -0.04156798, .im = 0.10584477 }, .{ .re = -0.06142213, .im = 0.10517690 }, .{ .re = -0.07337872, .im = 0.07264388 } }});
    }

    // 128 taps, 0.5 cutoff, 3.0 nyquist, Bartlett window, 256 ComplexFloat32 input, 256 ComplexFloat32 output
    {
        var block = LowpassFilterBlock(std.math.Complex(f32), 128).init(0.5, .{ .nyquist = 3.0, .window = WindowFunction.Bartlett });
        var tester = BlockTester.init(&block.block, 1e-6);
        try tester.check(2, &[1]type{
            std.math.Complex(f32),
        }, .{&[64]std.math.Complex(f32){ .{ .re = -0.73127151, .im = 0.69486749 }, .{ .re = 0.52754927, .im = -0.48986191 }, .{ .re = -0.00912983, .im = -0.10101787 }, .{ .re = 0.30318594, .im = 0.57744670 }, .{ .re = -0.81228077, .im = -0.94330502 }, .{ .re = 0.67153019, .im = -0.13446586 }, .{ .re = 0.52456015, .im = -0.99578792 }, .{ .re = -0.10922561, .im = 0.44308007 }, .{ .re = -0.54247558, .im = 0.89054137 }, .{ .re = 0.80285490, .im = -0.93882000 }, .{ .re = -0.94910830, .im = 0.08282494 }, .{ .re = 0.87829834, .im = -0.23759152 }, .{ .re = -0.56680119, .im = -0.15576684 }, .{ .re = -0.94191837, .im = -0.55661666 }, .{ .re = -0.12422481, .im = -0.00837552 }, .{ .re = -0.53383112, .im = -0.53826690 }, .{ .re = -0.56243795, .im = -0.08079307 }, .{ .re = -0.42043677, .im = -0.95702058 }, .{ .re = 0.67515594, .im = 0.11290865 }, .{ .re = 0.28458872, .im = -0.62818748 }, .{ .re = 0.98508680, .im = 0.71989304 }, .{ .re = -0.75822008, .im = -0.33460963 }, .{ .re = 0.44296879, .im = 0.42238355 }, .{ .re = 0.87288117, .im = -0.15578599 }, .{ .re = 0.66007137, .im = 0.34061113 }, .{ .re = -0.39326301, .im = 0.17516121 }, .{ .re = 0.76495802, .im = 0.69239485 }, .{ .re = 0.01056764, .im = 0.17800452 }, .{ .re = -0.93094832, .im = -0.51452005 }, .{ .re = 0.59480852, .im = -0.17137200 }, .{ .re = -0.65398520, .im = 0.09759752 }, .{ .re = 0.40608153, .im = 0.34897169 }, .{ .re = -0.25059396, .im = -0.12207674 }, .{ .re = 0.01685298, .im = 0.55688524 }, .{ .re = 0.04187684, .im = -0.21348982 }, .{ .re = -0.02061296, .im = -0.94085008 }, .{ .re = -0.91302544, .im = 0.40676415 }, .{ .re = 0.96637541, .im = 0.18636747 }, .{ .re = -0.21280062, .im = -0.65930158 }, .{ .re = 0.00447712, .im = 0.96415329 }, .{ .re = 0.54104626, .im = 0.07923490 }, .{ .re = 0.72057962, .im = -0.53564775 }, .{ .re = 0.02754333, .im = 0.90493482 }, .{ .re = 0.15558961, .im = -0.08173654 }, .{ .re = -0.46144104, .im = 0.09599262 }, .{ .re = 0.91423255, .im = -0.98858166 }, .{ .re = 0.56731045, .im = 0.64097184 }, .{ .re = 0.77235913, .im = 0.48100683 }, .{ .re = 0.61827981, .im = 0.03735657 }, .{ .re = 0.12271573, .im = -0.14781864 }, .{ .re = -0.88775343, .im = 0.74002033 }, .{ .re = 0.13999867, .im = -0.60032117 }, .{ .re = 0.00944094, .im = -0.03014978 }, .{ .re = -0.28642008, .im = -0.30784416 }, .{ .re = 0.07695759, .im = 0.24697889 }, .{ .re = 0.22490492, .im = -0.08370640 }, .{ .re = -0.94405001, .im = -0.54078996 }, .{ .re = -0.64557749, .im = 0.16892174 }, .{ .re = 0.72201771, .im = 0.59687787 }, .{ .re = 0.59419513, .im = 0.63287473 }, .{ .re = -0.48941192, .im = 0.68348968 }, .{ .re = 0.34622705, .im = -0.83353174 }, .{ .re = -0.96661872, .im = -0.97087997 }, .{ .re = 0.51117355, .im = -0.50088155 } }}, &[1]type{
            std.math.Complex(f32),
        }, .{&[64]std.math.Complex(f32){ .{ .re = 0.00000000, .im = 0.00000000 }, .{ .re = -0.00005781, .im = 0.00005493 }, .{ .re = -0.00004431, .im = 0.00004300 }, .{ .re = 0.00001332, .im = -0.00001999 }, .{ .re = 0.00012260, .im = -0.00006023 }, .{ .re = 0.00014995, .im = -0.00018448 }, .{ .re = 0.00019218, .im = -0.00028148 }, .{ .re = 0.00021861, .im = -0.00034940 }, .{ .re = 0.00013874, .im = -0.00019580 }, .{ .re = -0.00009584, .im = 0.00022832 }, .{ .re = -0.00032011, .im = 0.00065434 }, .{ .re = -0.00059731, .im = 0.00099607 }, .{ .re = -0.00067606, .im = 0.00107802 }, .{ .re = -0.00059948, .im = 0.00081701 }, .{ .re = -0.00037976, .im = 0.00019878 }, .{ .re = 0.00004611, .im = -0.00058363 }, .{ .re = 0.00058677, .im = -0.00133548 }, .{ .re = 0.00112035, .im = -0.00175650 }, .{ .re = 0.00151162, .im = -0.00171496 }, .{ .re = 0.00170671, .im = -0.00104026 }, .{ .re = 0.00153743, .im = 0.00010908 }, .{ .re = 0.00097095, .im = 0.00156052 }, .{ .re = -0.00013083, .im = 0.00279850 }, .{ .re = -0.00149037, .im = 0.00342893 }, .{ .re = -0.00272830, .im = 0.00307450 }, .{ .re = -0.00347999, .im = 0.00170015 }, .{ .re = -0.00352332, .im = -0.00046406 }, .{ .re = -0.00259598, .im = -0.00284885 }, .{ .re = -0.00082889, .im = -0.00481857 }, .{ .re = 0.00136247, .im = -0.00577838 }, .{ .re = 0.00359405, .im = -0.00523689 }, .{ .re = 0.00516651, .im = -0.00306463 }, .{ .re = 0.00563363, .im = 0.00039567 }, .{ .re = 0.00463514, .im = 0.00428904 }, .{ .re = 0.00223449, .im = 0.00758662 }, .{ .re = -0.00111774, .im = 0.00914924 }, .{ .re = -0.00463901, .im = 0.00818601 }, .{ .re = -0.00744063, .im = 0.00473365 }, .{ .re = -0.00845245, .im = -0.00056132 }, .{ .re = -0.00721792, .im = -0.00649021 }, .{ .re = -0.00375699, .im = -0.01128366 }, .{ .re = 0.00129383, .im = -0.01347835 }, .{ .re = 0.00670150, .im = -0.01215317 }, .{ .re = 0.01085728, .im = -0.00708546 }, .{ .re = 0.01235174, .im = 0.00070537 }, .{ .re = 0.01030447, .im = 0.00937570 }, .{ .re = 0.00493478, .im = 0.01648702 }, .{ .re = -0.00267011, .im = 0.01995121 }, .{ .re = -0.01057123, .im = 0.01825855 }, .{ .re = -0.01648266, .im = 0.01106675 }, .{ .re = -0.01837468, .im = -0.00048119 }, .{ .re = -0.01509961, .im = -0.01377513 }, .{ .re = -0.00664045, .im = -0.02551051 }, .{ .re = 0.00538745, .im = -0.03209709 }, .{ .re = 0.01794841, .im = -0.03076838 }, .{ .re = 0.02724188, .im = -0.02027724 }, .{ .re = 0.02953426, .im = -0.00157739 }, .{ .re = 0.02211226, .im = 0.02217427 }, .{ .re = 0.00449793, .im = 0.04621813 }, .{ .re = -0.02100555, .im = 0.06499056 }, .{ .re = -0.04963139, .im = 0.07328858 }, .{ .re = -0.07486152, .im = 0.06752004 }, .{ .re = -0.08946291, .im = 0.04653423 }, .{ .re = -0.08749647, .im = 0.01234486 } }});
    }

    // 128 taps, 0.2 cutoff, 256 Float32 input, 256 Float32 output
    {
        var block = LowpassFilterBlock(f32, 128).init(0.2, .{});
        var tester = BlockTester.init(&block.block, 1e-6);
        try tester.check(2, &[1]type{
            f32,
        }, .{&[64]f32{ -0.24488358, -0.59217191, -0.99224871, -0.44475749, 0.19632840, 0.76332581, 0.65884250, 0.02192042, 0.97403622, -0.07683806, 0.66918695, -0.18206932, 0.48926124, 0.97518337, -0.38932681, -0.65937436, 0.24006742, 0.06191236, -0.28115594, -0.99296153, -0.22167473, -0.14826106, -0.18949586, 0.72249067, 0.16885605, 0.46766159, 0.79581833, 0.49754697, -0.01459590, 0.49153668, 0.28071079, 0.29749086, 0.25935072, -0.18600205, 0.25852406, 0.26746503, 0.87423593, 0.56494737, 0.69253606, 0.53499961, 0.63065171, 0.21092477, -0.30109984, -0.47083348, 0.41604009, 0.74788415, 0.08849352, -0.69586009, 0.66595060, -0.03091384, -0.06579474, -0.90922385, 0.02056185, 0.48949531, -0.15480438, -0.28964537, 0.31368709, -0.96051723, 0.01432719, 0.89225417, 0.38089520, -0.19615254, 0.37781647, 0.20998783 }}, &[1]type{
            f32,
        }, .{&[64]f32{ -0.00007937, -0.00029230, -0.00064858, -0.00078844, -0.00050589, 0.00022602, 0.00105872, 0.00148998, 0.00170067, 0.00107670, 0.00013036, -0.00120520, -0.00209101, -0.00201165, -0.00132412, -0.00004420, 0.00174949, 0.00316793, 0.00341225, 0.00194638, -0.00058355, -0.00340957, -0.00540608, -0.00524725, -0.00290594, 0.00122606, 0.00578825, 0.00877094, 0.00850905, 0.00479576, -0.00153476, -0.00820546, -0.01246113, -0.01224076, -0.00669856, 0.00260671, 0.01253318, 0.01879845, 0.01828682, 0.01009967, -0.00345220, -0.01766512, -0.02679447, -0.02621604, -0.01435379, 0.00557772, 0.02629015, 0.03915323, 0.03811508, 0.02083966, -0.00820683, -0.03933932, -0.05960949, -0.05855708, -0.03264158, 0.01276576, 0.06355875, 0.09956229, 0.10242947, 0.06081897, -0.02479834, -0.13990921, -0.25842288, -0.34997246 }});
    }

    // 128 taps, 0.5 cutoff, 3.0 nyquist, Bartlett window, 256 Float32 input, 256 Float32 output
    {
        var block = LowpassFilterBlock(f32, 128).init(0.5, .{ .nyquist = 3.0, .window = WindowFunction.Bartlett });
        var tester = BlockTester.init(&block.block, 1e-6);
        try tester.check(2, &[1]type{
            f32,
        }, .{&[64]f32{ -0.24488358, -0.59217191, -0.99224871, -0.44475749, 0.19632840, 0.76332581, 0.65884250, 0.02192042, 0.97403622, -0.07683806, 0.66918695, -0.18206932, 0.48926124, 0.97518337, -0.38932681, -0.65937436, 0.24006742, 0.06191236, -0.28115594, -0.99296153, -0.22167473, -0.14826106, -0.18949586, 0.72249067, 0.16885605, 0.46766159, 0.79581833, 0.49754697, -0.01459590, 0.49153668, 0.28071079, 0.29749086, 0.25935072, -0.18600205, 0.25852406, 0.26746503, 0.87423593, 0.56494737, 0.69253606, 0.53499961, 0.63065171, 0.21092477, -0.30109984, -0.47083348, 0.41604009, 0.74788415, 0.08849352, -0.69586009, 0.66595060, -0.03091384, -0.06579474, -0.90922385, 0.02056185, 0.48949531, -0.15480438, -0.28964537, 0.31368709, -0.96051723, 0.01432719, 0.89225417, 0.38089520, -0.19615254, 0.37781647, 0.20998783 }}, &[1]type{
            f32,
        }, .{&[64]f32{ 0.00000000, -0.00001936, -0.00007561, -0.00016416, -0.00016894, 0.00002647, 0.00045184, 0.00095622, 0.00125100, 0.00119308, 0.00057250, -0.00049482, -0.00182235, -0.00294360, -0.00337335, -0.00292895, -0.00157809, 0.00054898, 0.00295986, 0.00495394, 0.00580267, 0.00514218, 0.00295040, -0.00036486, -0.00393926, -0.00685602, -0.00820991, -0.00742424, -0.00451443, -0.00011218, 0.00476086, 0.00878851, 0.01076147, 0.00990268, 0.00610277, 0.00014129, -0.00654041, -0.01209049, -0.01484900, -0.01371866, -0.00858393, -0.00041071, 0.00882793, 0.01661166, 0.02054572, 0.01909194, 0.01194010, 0.00020519, -0.01356755, -0.02564034, -0.03226119, -0.03044892, -0.01904678, 0.00083184, 0.02539217, 0.04844988, 0.06259287, 0.06073862, 0.03764490, -0.00811961, -0.07328410, -0.14979272, -0.22544792, -0.28549847 }});
    }
}
