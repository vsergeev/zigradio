const std = @import("std");

const Block = @import("../../radio.zig").Block;
const ProcessResult = @import("../../radio.zig").ProcessResult;

const zero = @import("../../radio.zig").utils.math.zero;
const innerProduct = @import("../../radio.zig").utils.math.innerProduct;

////////////////////////////////////////////////////////////////////////////////
// FIR Filter Block
////////////////////////////////////////////////////////////////////////////////

pub fn _FIRFilterBlock(comptime T: type, comptime N: comptime_int, comptime Context: type) type {
    return struct {
        const Self = @This();

        block: Block,
        context: Context,
        taps: [N]f32 = [_]f32{0} ** N,
        state: [N]T = [_]T{zero(T)} ** N,

        pub fn init(context: Context) Self {
            return .{ .block = Block.init(@This()), .context = context };
        }

        pub fn initialize(self: *Self, allocator: std.mem.Allocator) !void {
            for (self.state) |*e| e.* = zero(T);

            if (Context != void) {
                return Context.initialize(self, allocator);
            }
        }

        pub fn process(self: *Self, x: []const T, y: []T) !ProcessResult {
            for (x) |_, i| {
                // Shift the input state samples down
                for (self.state[1..]) |_, j| self.state[N - 1 - j] = self.state[N - 2 - j];
                // Insert input sample into input state
                self.state[0] = x[i];

                // y[n] = b[0]*x[n] + b[1]*x[n-1] + b[2]*x[n-2] + ...
                y[i] = innerProduct(T, &self.state, &self.taps);
            }

            return ProcessResult.init(&[1]usize{x.len}, &[1]usize{x.len});
        }
    };
}

pub fn FIRFilterBlock(comptime T: type, comptime N: comptime_int) type {
    return struct {
        pub fn init(taps: [N]f32) _FIRFilterBlock(T, N, void) {
            var block = _FIRFilterBlock(T, N, void).init(void{});
            std.mem.copy(f32, &block.taps, &taps);
            return block;
        }
    };
}

////////////////////////////////////////////////////////////////////////////////
// Tests
////////////////////////////////////////////////////////////////////////////////

const BlockTester = @import("radio").testing.BlockTester;

test "FIRFilterBlock" {
    // 1 tap, ComplexFloat32
    {
        var block = FIRFilterBlock(std.math.Complex(f32), 1).init([1]f32{-1.00000000});
        var tester = BlockTester.init(&block.block, 1e-6);
        try tester.check(2, &[1]type{
            std.math.Complex(f32),
        }, .{&[64]std.math.Complex(f32){ .{ .re = -0.73127151, .im = 0.69486749 }, .{ .re = 0.52754927, .im = -0.48986191 }, .{ .re = -0.00912983, .im = -0.10101787 }, .{ .re = 0.30318594, .im = 0.57744670 }, .{ .re = -0.81228077, .im = -0.94330502 }, .{ .re = 0.67153019, .im = -0.13446586 }, .{ .re = 0.52456015, .im = -0.99578792 }, .{ .re = -0.10922561, .im = 0.44308007 }, .{ .re = -0.54247558, .im = 0.89054137 }, .{ .re = 0.80285490, .im = -0.93882000 }, .{ .re = -0.94910830, .im = 0.08282494 }, .{ .re = 0.87829834, .im = -0.23759152 }, .{ .re = -0.56680119, .im = -0.15576684 }, .{ .re = -0.94191837, .im = -0.55661666 }, .{ .re = -0.12422481, .im = -0.00837552 }, .{ .re = -0.53383112, .im = -0.53826690 }, .{ .re = -0.56243795, .im = -0.08079307 }, .{ .re = -0.42043677, .im = -0.95702058 }, .{ .re = 0.67515594, .im = 0.11290865 }, .{ .re = 0.28458872, .im = -0.62818748 }, .{ .re = 0.98508680, .im = 0.71989304 }, .{ .re = -0.75822008, .im = -0.33460963 }, .{ .re = 0.44296879, .im = 0.42238355 }, .{ .re = 0.87288117, .im = -0.15578599 }, .{ .re = 0.66007137, .im = 0.34061113 }, .{ .re = -0.39326301, .im = 0.17516121 }, .{ .re = 0.76495802, .im = 0.69239485 }, .{ .re = 0.01056764, .im = 0.17800452 }, .{ .re = -0.93094832, .im = -0.51452005 }, .{ .re = 0.59480852, .im = -0.17137200 }, .{ .re = -0.65398520, .im = 0.09759752 }, .{ .re = 0.40608153, .im = 0.34897169 }, .{ .re = -0.25059396, .im = -0.12207674 }, .{ .re = 0.01685298, .im = 0.55688524 }, .{ .re = 0.04187684, .im = -0.21348982 }, .{ .re = -0.02061296, .im = -0.94085008 }, .{ .re = -0.91302544, .im = 0.40676415 }, .{ .re = 0.96637541, .im = 0.18636747 }, .{ .re = -0.21280062, .im = -0.65930158 }, .{ .re = 0.00447712, .im = 0.96415329 }, .{ .re = 0.54104626, .im = 0.07923490 }, .{ .re = 0.72057962, .im = -0.53564775 }, .{ .re = 0.02754333, .im = 0.90493482 }, .{ .re = 0.15558961, .im = -0.08173654 }, .{ .re = -0.46144104, .im = 0.09599262 }, .{ .re = 0.91423255, .im = -0.98858166 }, .{ .re = 0.56731045, .im = 0.64097184 }, .{ .re = 0.77235913, .im = 0.48100683 }, .{ .re = 0.61827981, .im = 0.03735657 }, .{ .re = 0.12271573, .im = -0.14781864 }, .{ .re = -0.88775343, .im = 0.74002033 }, .{ .re = 0.13999867, .im = -0.60032117 }, .{ .re = 0.00944094, .im = -0.03014978 }, .{ .re = -0.28642008, .im = -0.30784416 }, .{ .re = 0.07695759, .im = 0.24697889 }, .{ .re = 0.22490492, .im = -0.08370640 }, .{ .re = -0.94405001, .im = -0.54078996 }, .{ .re = -0.64557749, .im = 0.16892174 }, .{ .re = 0.72201771, .im = 0.59687787 }, .{ .re = 0.59419513, .im = 0.63287473 }, .{ .re = -0.48941192, .im = 0.68348968 }, .{ .re = 0.34622705, .im = -0.83353174 }, .{ .re = -0.96661872, .im = -0.97087997 }, .{ .re = 0.51117355, .im = -0.50088155 } }}, &[1]type{
            std.math.Complex(f32),
        }, .{&[64]std.math.Complex(f32){ .{ .re = 0.73127151, .im = -0.69486749 }, .{ .re = -0.52754927, .im = 0.48986191 }, .{ .re = 0.00912983, .im = 0.10101787 }, .{ .re = -0.30318594, .im = -0.57744670 }, .{ .re = 0.81228077, .im = 0.94330502 }, .{ .re = -0.67153019, .im = 0.13446586 }, .{ .re = -0.52456015, .im = 0.99578792 }, .{ .re = 0.10922561, .im = -0.44308007 }, .{ .re = 0.54247558, .im = -0.89054137 }, .{ .re = -0.80285490, .im = 0.93882000 }, .{ .re = 0.94910830, .im = -0.08282494 }, .{ .re = -0.87829834, .im = 0.23759152 }, .{ .re = 0.56680119, .im = 0.15576684 }, .{ .re = 0.94191837, .im = 0.55661666 }, .{ .re = 0.12422481, .im = 0.00837552 }, .{ .re = 0.53383112, .im = 0.53826690 }, .{ .re = 0.56243795, .im = 0.08079307 }, .{ .re = 0.42043677, .im = 0.95702058 }, .{ .re = -0.67515594, .im = -0.11290865 }, .{ .re = -0.28458872, .im = 0.62818748 }, .{ .re = -0.98508680, .im = -0.71989304 }, .{ .re = 0.75822008, .im = 0.33460963 }, .{ .re = -0.44296879, .im = -0.42238355 }, .{ .re = -0.87288117, .im = 0.15578599 }, .{ .re = -0.66007137, .im = -0.34061113 }, .{ .re = 0.39326301, .im = -0.17516121 }, .{ .re = -0.76495802, .im = -0.69239485 }, .{ .re = -0.01056764, .im = -0.17800452 }, .{ .re = 0.93094832, .im = 0.51452005 }, .{ .re = -0.59480852, .im = 0.17137200 }, .{ .re = 0.65398520, .im = -0.09759752 }, .{ .re = -0.40608153, .im = -0.34897169 }, .{ .re = 0.25059396, .im = 0.12207674 }, .{ .re = -0.01685298, .im = -0.55688524 }, .{ .re = -0.04187684, .im = 0.21348982 }, .{ .re = 0.02061296, .im = 0.94085008 }, .{ .re = 0.91302544, .im = -0.40676415 }, .{ .re = -0.96637541, .im = -0.18636747 }, .{ .re = 0.21280062, .im = 0.65930158 }, .{ .re = -0.00447712, .im = -0.96415329 }, .{ .re = -0.54104626, .im = -0.07923490 }, .{ .re = -0.72057962, .im = 0.53564775 }, .{ .re = -0.02754333, .im = -0.90493482 }, .{ .re = -0.15558961, .im = 0.08173654 }, .{ .re = 0.46144104, .im = -0.09599262 }, .{ .re = -0.91423255, .im = 0.98858166 }, .{ .re = -0.56731045, .im = -0.64097184 }, .{ .re = -0.77235913, .im = -0.48100683 }, .{ .re = -0.61827981, .im = -0.03735657 }, .{ .re = -0.12271573, .im = 0.14781864 }, .{ .re = 0.88775343, .im = -0.74002033 }, .{ .re = -0.13999867, .im = 0.60032117 }, .{ .re = -0.00944094, .im = 0.03014978 }, .{ .re = 0.28642008, .im = 0.30784416 }, .{ .re = -0.07695759, .im = -0.24697889 }, .{ .re = -0.22490492, .im = 0.08370640 }, .{ .re = 0.94405001, .im = 0.54078996 }, .{ .re = 0.64557749, .im = -0.16892174 }, .{ .re = -0.72201771, .im = -0.59687787 }, .{ .re = -0.59419513, .im = -0.63287473 }, .{ .re = 0.48941192, .im = -0.68348968 }, .{ .re = -0.34622705, .im = 0.83353174 }, .{ .re = 0.96661872, .im = 0.97087997 }, .{ .re = -0.51117355, .im = 0.50088155 } }});
    }

    // 8 taps, ComplexFloat32
    {
        var block = FIRFilterBlock(std.math.Complex(f32), 8).init([8]f32{ -0.12752345, -0.21367948, -0.09577795, 0.04227906, 0.16438122, 0.14188087, 0.00472053, 0.20975743 });
        var tester = BlockTester.init(&block.block, 1e-6);
        try tester.check(2, &[1]type{
            std.math.Complex(f32),
        }, .{&[64]std.math.Complex(f32){ .{ .re = -0.73127151, .im = 0.69486749 }, .{ .re = 0.52754927, .im = -0.48986191 }, .{ .re = -0.00912983, .im = -0.10101787 }, .{ .re = 0.30318594, .im = 0.57744670 }, .{ .re = -0.81228077, .im = -0.94330502 }, .{ .re = 0.67153019, .im = -0.13446586 }, .{ .re = 0.52456015, .im = -0.99578792 }, .{ .re = -0.10922561, .im = 0.44308007 }, .{ .re = -0.54247558, .im = 0.89054137 }, .{ .re = 0.80285490, .im = -0.93882000 }, .{ .re = -0.94910830, .im = 0.08282494 }, .{ .re = 0.87829834, .im = -0.23759152 }, .{ .re = -0.56680119, .im = -0.15576684 }, .{ .re = -0.94191837, .im = -0.55661666 }, .{ .re = -0.12422481, .im = -0.00837552 }, .{ .re = -0.53383112, .im = -0.53826690 }, .{ .re = -0.56243795, .im = -0.08079307 }, .{ .re = -0.42043677, .im = -0.95702058 }, .{ .re = 0.67515594, .im = 0.11290865 }, .{ .re = 0.28458872, .im = -0.62818748 }, .{ .re = 0.98508680, .im = 0.71989304 }, .{ .re = -0.75822008, .im = -0.33460963 }, .{ .re = 0.44296879, .im = 0.42238355 }, .{ .re = 0.87288117, .im = -0.15578599 }, .{ .re = 0.66007137, .im = 0.34061113 }, .{ .re = -0.39326301, .im = 0.17516121 }, .{ .re = 0.76495802, .im = 0.69239485 }, .{ .re = 0.01056764, .im = 0.17800452 }, .{ .re = -0.93094832, .im = -0.51452005 }, .{ .re = 0.59480852, .im = -0.17137200 }, .{ .re = -0.65398520, .im = 0.09759752 }, .{ .re = 0.40608153, .im = 0.34897169 }, .{ .re = -0.25059396, .im = -0.12207674 }, .{ .re = 0.01685298, .im = 0.55688524 }, .{ .re = 0.04187684, .im = -0.21348982 }, .{ .re = -0.02061296, .im = -0.94085008 }, .{ .re = -0.91302544, .im = 0.40676415 }, .{ .re = 0.96637541, .im = 0.18636747 }, .{ .re = -0.21280062, .im = -0.65930158 }, .{ .re = 0.00447712, .im = 0.96415329 }, .{ .re = 0.54104626, .im = 0.07923490 }, .{ .re = 0.72057962, .im = -0.53564775 }, .{ .re = 0.02754333, .im = 0.90493482 }, .{ .re = 0.15558961, .im = -0.08173654 }, .{ .re = -0.46144104, .im = 0.09599262 }, .{ .re = 0.91423255, .im = -0.98858166 }, .{ .re = 0.56731045, .im = 0.64097184 }, .{ .re = 0.77235913, .im = 0.48100683 }, .{ .re = 0.61827981, .im = 0.03735657 }, .{ .re = 0.12271573, .im = -0.14781864 }, .{ .re = -0.88775343, .im = 0.74002033 }, .{ .re = 0.13999867, .im = -0.60032117 }, .{ .re = 0.00944094, .im = -0.03014978 }, .{ .re = -0.28642008, .im = -0.30784416 }, .{ .re = 0.07695759, .im = 0.24697889 }, .{ .re = 0.22490492, .im = -0.08370640 }, .{ .re = -0.94405001, .im = -0.54078996 }, .{ .re = -0.64557749, .im = 0.16892174 }, .{ .re = 0.72201771, .im = 0.59687787 }, .{ .re = 0.59419513, .im = 0.63287473 }, .{ .re = -0.48941192, .im = 0.68348968 }, .{ .re = 0.34622705, .im = -0.83353174 }, .{ .re = -0.96661872, .im = -0.97087997 }, .{ .re = 0.51117355, .im = -0.50088155 } }}, &[1]type{
            std.math.Complex(f32),
        }, .{&[64]std.math.Complex(f32){ .{ .re = 0.09325427, .im = -0.08861190 }, .{ .re = 0.08898281, .im = -0.08601004 }, .{ .re = -0.04152250, .im = 0.05100260 }, .{ .re = -0.11815752, .im = 0.02424377 }, .{ .re = -0.05822834, .im = 0.10009255 }, .{ .re = 0.04147311, .im = 0.17719917 }, .{ .re = -0.04987255, .im = 0.18765330 }, .{ .re = -0.29917577, .im = 0.35330325 }, .{ .re = 0.09077486, .im = -0.29491460 }, .{ .re = 0.04082839, .im = -0.32951114 }, .{ .re = 0.23808542, .im = 0.05738709 }, .{ .re = -0.11977136, .im = -0.12677918 }, .{ .re = 0.04811855, .im = 0.19935413 }, .{ .re = 0.28150359, .im = -0.10423229 }, .{ .re = 0.24095340, .im = 0.10243695 }, .{ .re = 0.06058853, .im = 0.27221888 }, .{ .re = 0.35323411, .im = -0.15325977 }, .{ .re = -0.21051428, .im = 0.09316031 }, .{ .re = 0.06253334, .im = 0.04415601 }, .{ .re = -0.39278355, .im = 0.01925791 }, .{ .re = -0.63522863, .im = -0.21529323 }, .{ .re = -0.29000250, .im = -0.21929255 }, .{ .re = -0.04008932, .im = -0.30838338 }, .{ .re = -0.06908432, .im = -0.11661094 }, .{ .re = -0.22787003, .im = -0.23574974 }, .{ .re = 0.00232230, .im = 0.00551363 }, .{ .re = -0.01024998, .im = -0.27134594 }, .{ .re = 0.31015381, .im = 0.01071705 }, .{ .re = 0.10196398, .im = -0.06563900 }, .{ .re = 0.28044498, .im = 0.30900332 }, .{ .re = 0.30206862, .im = 0.18857758 }, .{ .re = 0.23849763, .im = 0.12907432 }, .{ .re = -0.19743927, .im = -0.09490574 }, .{ .re = 0.11105121, .im = -0.02932374 }, .{ .re = 0.00693984, .im = -0.03868578 }, .{ .re = -0.23702994, .im = 0.06957847 }, .{ .re = 0.25563899, .im = 0.18712004 }, .{ .re = -0.09244146, .im = 0.06674343 }, .{ .re = 0.00048925, .im = 0.08205700 }, .{ .re = -0.13619038, .im = -0.19065113 }, .{ .re = -0.15798980, .im = -0.09591929 }, .{ .re = -0.17892730, .im = -0.02971753 }, .{ .re = -0.11562044, .im = -0.24513391 }, .{ .re = -0.28827593, .im = 0.02285852 }, .{ .re = 0.34469858, .im = 0.08170397 }, .{ .re = 0.11887534, .im = -0.05890655 }, .{ .re = -0.10666686, .im = 0.39221942 }, .{ .re = -0.18041524, .im = 0.02948918 }, .{ .re = -0.16206551, .im = -0.31463420 }, .{ .re = -0.10642757, .im = 0.03244407 }, .{ .re = 0.31384972, .im = -0.09761436 }, .{ .re = 0.30120522, .im = 0.11964370 }, .{ .re = 0.46475840, .im = -0.07495638 }, .{ .re = 0.21410353, .im = 0.25220543 }, .{ .re = 0.09281068, .im = 0.21353495 }, .{ .re = 0.01003297, .im = -0.00043858 }, .{ .re = 0.09581545, .im = -0.06746367 }, .{ .re = 0.03446854, .im = 0.20998295 }, .{ .re = 0.14722359, .im = -0.19309697 }, .{ .re = -0.15961844, .im = -0.23378551 }, .{ .re = -0.34399346, .im = -0.43659797 }, .{ .re = -0.18881869, .im = -0.07268255 }, .{ .re = 0.19109194, .im = 0.36518413 }, .{ .re = 0.08655322, .im = 0.45614350 } }});
    }

    // 1 tap, Float32
    {
        var block = FIRFilterBlock(f32, 1).init([1]f32{-1.00000000});
        var tester = BlockTester.init(&block.block, 1e-6);
        try tester.check(2, &[1]type{
            f32,
        }, .{&[64]f32{ 0.31368709, -0.96051723, 0.01432719, 0.89225417, 0.38089520, -0.19615254, 0.37781647, 0.20998783, -0.58222121, -0.58458334, 0.77205056, -0.46186161, -0.85023046, 0.66135520, 0.04639554, -0.26358366, 0.02303784, 0.47345135, -0.66289276, 0.30613399, 0.42687401, 0.63000691, -0.46047872, 0.21933267, -0.53577226, 0.12208935, -0.65527403, 0.57953525, 0.73343575, -0.34071288, -0.55536288, 0.92757678, 0.41338065, 0.68758518, -0.93893105, 0.79878664, 0.24490412, -0.36694169, -0.13646875, 0.52318597, 0.57082391, -0.62019825, 0.25177300, -0.66874093, 0.94609958, -0.11284689, 0.82629001, 0.45649573, 0.21251979, -0.47603193, 0.05318464, -0.72276050, -0.72380400, 0.43149957, -0.27782047, 0.50275260, -0.51901281, 0.43631628, 0.43695384, -0.38900825, -0.78722912, -0.20598429, -0.01527700, -0.80005163 }}, &[1]type{
            f32,
        }, .{&[64]f32{ -0.31368709, 0.96051723, -0.01432719, -0.89225417, -0.38089520, 0.19615254, -0.37781647, -0.20998783, 0.58222121, 0.58458334, -0.77205056, 0.46186161, 0.85023046, -0.66135520, -0.04639554, 0.26358366, -0.02303784, -0.47345135, 0.66289276, -0.30613399, -0.42687401, -0.63000691, 0.46047872, -0.21933267, 0.53577226, -0.12208935, 0.65527403, -0.57953525, -0.73343575, 0.34071288, 0.55536288, -0.92757678, -0.41338065, -0.68758518, 0.93893105, -0.79878664, -0.24490412, 0.36694169, 0.13646875, -0.52318597, -0.57082391, 0.62019825, -0.25177300, 0.66874093, -0.94609958, 0.11284689, -0.82629001, -0.45649573, -0.21251979, 0.47603193, -0.05318464, 0.72276050, 0.72380400, -0.43149957, 0.27782047, -0.50275260, 0.51901281, -0.43631628, -0.43695384, 0.38900825, 0.78722912, 0.20598429, 0.01527700, 0.80005163 }});
    }

    // 8 taps, Float32
    {
        var block = FIRFilterBlock(f32, 8).init([8]f32{ -0.10536254, -0.17677858, -0.10717576, 0.05943004, 0.01186317, -0.18956976, -0.19212671, 0.15769339 });
        var tester = BlockTester.init(&block.block, 1e-6);
        try tester.check(2, &[1]type{
            f32,
        }, .{&[64]f32{ 0.31368709, -0.96051723, 0.01432719, 0.89225417, 0.38089520, -0.19615254, 0.37781647, 0.20998783, -0.58222121, -0.58458334, 0.77205056, -0.46186161, -0.85023046, 0.66135520, 0.04639554, -0.26358366, 0.02303784, 0.47345135, -0.66289276, 0.30613399, 0.42687401, 0.63000691, -0.46047872, 0.21933267, -0.53577226, 0.12208935, -0.65527403, 0.57953525, 0.73343575, -0.34071288, -0.55536288, 0.92757678, 0.41338065, 0.68758518, -0.93893105, 0.79878664, 0.24490412, -0.36694169, -0.13646875, 0.52318597, 0.57082391, -0.62019825, 0.25177300, -0.66874093, 0.94609958, -0.11284689, 0.82629001, 0.45649573, 0.21251979, -0.47603193, 0.05318464, -0.72276050, -0.72380400, 0.43149957, -0.27782047, 0.50275260, -0.51901281, 0.43631628, 0.43695384, -0.38900825, -0.78722912, -0.20598429, -0.01527700, -0.80005163 }}, &[1]type{
            f32,
        }, .{&[64]f32{ -0.03305087, 0.04574938, 0.13466968, 0.02504369, -0.25276130, -0.21230391, 0.12905915, 0.19662105, -0.34677279, -0.07923429, 0.20606533, -0.03114802, -0.09649216, 0.29867524, 0.20682608, -0.23317531, -0.08454739, 0.35655740, -0.06628897, -0.23750502, 0.14570712, -0.15484011, -0.23401916, 0.05810741, 0.25352037, -0.20582284, -0.04071628, 0.04602000, 0.03764258, -0.20655198, 0.18118584, 0.10369959, -0.12427084, -0.63569731, -0.00332386, 0.33009750, -0.14348285, -0.48204002, 0.02583747, 0.14343546, -0.01951183, -0.45205796, 0.19987765, 0.26754251, -0.16936019, -0.30633131, -0.11486323, 0.02766312, -0.20653173, 0.00026349, -0.17313108, 0.15004955, -0.09052450, 0.15977320, 0.10964037, 0.01319441, 0.06436992, 0.26496395, -0.09767332, -0.25227576, 0.15076976, 0.19169129, 0.20074461, -0.19083342 }});
    }
}
