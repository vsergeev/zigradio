const std = @import("std");

const Block = @import("../../radio.zig").Block;
const ProcessResult = @import("../../radio.zig").ProcessResult;

const _IIRFilterBlock = @import("./iirfilter.zig")._IIRFilterBlock;

////////////////////////////////////////////////////////////////////////////////
// Singlepole Lowpass Filter Block
////////////////////////////////////////////////////////////////////////////////

pub fn SinglepoleLowpassFilterBlock(comptime T: type) type {
    return struct {
        pub const DerivedBlock = _IIRFilterBlock(T, 2, 2, @This());

        cutoff: f32,

        pub fn init(cutoff: f32) DerivedBlock {
            return DerivedBlock.init(.{ .cutoff = cutoff });
        }

        pub fn initialize(self: *DerivedBlock, _: std.mem.Allocator) !void {
            // Compute wraped tau
            const rate = try self.block.getRate(f32);
            const tau = 1 / (2 * rate * std.math.tan((std.math.pi * self.context.cutoff) / rate));

            // Populate taps
            self.b_taps[0] = 1 / (1 + 2 * tau * rate);
            self.b_taps[1] = 1 / (1 + 2 * tau * rate);
            self.a_taps[0] = 1;
            self.a_taps[1] = (1 - 2 * tau * rate) / (1 + 2 * tau * rate);
        }
    };
}

////////////////////////////////////////////////////////////////////////////////
// Tests
////////////////////////////////////////////////////////////////////////////////

const BlockTester = @import("radio").testing.BlockTester;

test "SinglepoleLowpassFilterBlock" {
    // 1e-2 cutoff, ComplexFloat32
    {
        var block = SinglepoleLowpassFilterBlock(std.math.Complex(f32)).init(0.01);
        var tester = BlockTester.init(&block.block, 1e-6);
        try tester.check(2, &[1]type{
            std.math.Complex(f32),
        }, .{&[64]std.math.Complex(f32){ .{ .re = 0.65553629, .im = -0.97523654 }, .{ .re = 0.34082329, .im = -0.81663376 }, .{ .re = -0.76979506, .im = 0.77012014 }, .{ .re = -0.91995299, .im = -0.52073330 }, .{ .re = 0.97631699, .im = -0.15797283 }, .{ .re = -0.76888371, .im = -0.66523314 }, .{ .re = -0.51715940, .im = 0.48801285 }, .{ .re = -0.79433179, .im = 0.82152885 }, .{ .re = -0.24344546, .im = 0.94052809 }, .{ .re = 0.81844544, .im = -0.41195285 }, .{ .re = -0.49317971, .im = -0.04597981 }, .{ .re = -0.79974169, .im = 0.30410039 }, .{ .re = -0.92075950, .im = -0.97898769 }, .{ .re = 0.96516722, .im = -0.40890029 }, .{ .re = 0.19314128, .im = -0.10031093 }, .{ .re = -0.37343827, .im = -0.87407041 }, .{ .re = 0.82678401, .im = 0.93962657 }, .{ .re = 0.93959302, .im = -0.77727538 }, .{ .re = -0.56961346, .im = 0.23561376 }, .{ .re = 0.95990574, .im = 0.08582640 }, .{ .re = 0.37637961, .im = 0.32366887 }, .{ .re = -0.48182800, .im = 0.08320452 }, .{ .re = -0.38535777, .im = -0.50723761 }, .{ .re = -0.83726245, .im = -0.43842655 }, .{ .re = 0.96675342, .im = -0.10419552 }, .{ .re = 0.30402106, .im = 0.28693217 }, .{ .re = 0.88146901, .im = -0.21904290 }, .{ .re = -0.38643140, .im = -0.34551716 }, .{ .re = -0.36652973, .im = 0.69426954 }, .{ .re = 0.78700048, .im = -0.39438137 }, .{ .re = -0.33133319, .im = 0.08845083 }, .{ .re = 0.15797088, .im = 0.19192508 }, .{ .re = -0.50980401, .im = -0.95925194 }, .{ .re = -0.51248139, .im = -0.85534495 }, .{ .re = 0.10240951, .im = -0.85816729 }, .{ .re = -0.84974039, .im = 0.27076420 }, .{ .re = -0.41835687, .im = 0.58436954 }, .{ .re = -0.01347791, .im = 0.72529793 }, .{ .re = -0.69164079, .im = 0.00285917 }, .{ .re = 0.58996701, .im = -0.84578598 }, .{ .re = 0.89845592, .im = -0.65351576 }, .{ .re = 0.55241799, .im = 0.96979177 }, .{ .re = 0.64310026, .im = -0.36043200 }, .{ .re = -0.78624445, .im = 0.02871650 }, .{ .re = 0.83871394, .im = -0.41302100 }, .{ .re = 0.78751761, .im = -0.71663874 }, .{ .re = 0.82096338, .im = -0.93648010 }, .{ .re = -0.36786264, .im = 0.80617654 }, .{ .re = 0.60771257, .im = 0.81430751 }, .{ .re = 0.68143702, .im = 0.49236977 }, .{ .re = 0.37919036, .im = -0.64369029 }, .{ .re = -0.13472399, .im = -0.68420619 }, .{ .re = 0.42964891, .im = 0.33555749 }, .{ .re = -0.49482721, .im = -0.87117159 }, .{ .re = 0.92677176, .im = 0.61650527 }, .{ .re = 0.09853987, .im = 0.08275530 }, .{ .re = 0.70258534, .im = -0.09338064 }, .{ .re = -0.20857909, .im = -0.32266170 }, .{ .re = -0.48406181, .im = -0.95118302 }, .{ .re = 0.29287767, .im = -0.16663224 }, .{ .re = 0.14120726, .im = -0.87535673 }, .{ .re = -0.29011312, .im = -0.72343177 }, .{ .re = -0.74974197, .im = -0.48177409 }, .{ .re = 0.65786874, .im = -0.20440537 } }}, &[1]type{
            std.math.Complex(f32),
        }, .{&[64]std.math.Complex(f32){ .{ .re = 0.01013872, .im = -0.01508329 }, .{ .re = 0.02523509, .im = -0.04233032 }, .{ .re = 0.01781990, .im = -0.04174032 }, .{ .re = -0.00886545, .im = -0.03659210 }, .{ .re = -0.00771948, .im = -0.04595727 }, .{ .re = -0.00427247, .im = -0.05726764 }, .{ .re = -0.02403063, .im = -0.05823715 }, .{ .re = -0.04357121, .im = -0.03618197 }, .{ .re = -0.05827400, .im = -0.00781028 }, .{ .re = -0.04757832, .im = 0.00060641 }, .{ .re = -0.04107594, .im = -0.00649487 }, .{ .re = -0.05980206, .im = -0.00230180 }, .{ .re = -0.08456200, .im = -0.01266860 }, .{ .re = -0.08125945, .im = -0.03374220 }, .{ .re = -0.06083116, .im = -0.04057408 }, .{ .re = -0.06173801, .im = -0.05438909 }, .{ .re = -0.05281672, .im = -0.05169278 }, .{ .re = -0.02386366, .im = -0.04758282 }, .{ .re = -0.01740329, .im = -0.05448845 }, .{ .re = -0.01082858, .im = -0.04783150 }, .{ .re = 0.01017375, .im = -0.04001857 }, .{ .re = 0.00822816, .im = -0.03248787 }, .{ .re = -0.00543851, .im = -0.03804116 }, .{ .re = -0.02417968, .im = -0.05149037 }, .{ .re = -0.02142900, .im = -0.05828999 }, .{ .re = -0.00111198, .im = -0.05366067 }, .{ .re = 0.01725756, .im = -0.05095081 }, .{ .re = 0.02438013, .im = -0.05810642 }, .{ .re = 0.01198047, .im = -0.05091513 }, .{ .re = 0.01811301, .im = -0.04470204 }, .{ .re = 0.02460021, .im = -0.04805090 }, .{ .re = 0.02115799, .im = -0.04222818 }, .{ .re = 0.01506197, .im = -0.05278966 }, .{ .re = -0.00121490, .im = -0.07922182 }, .{ .re = -0.00751961, .im = -0.10327297 }, .{ .re = -0.01884545, .im = -0.10916342 }, .{ .re = -0.03787527, .im = -0.09256096 }, .{ .re = -0.04338258, .im = -0.06944212 }, .{ .re = -0.05294621, .im = -0.05603220 }, .{ .re = -0.05288097, .im = -0.06733593 }, .{ .re = -0.02822484, .im = -0.08844169 }, .{ .re = -0.00491213, .im = -0.08081435 }, .{ .re = 0.01373005, .im = -0.06889001 }, .{ .re = 0.01109143, .im = -0.07188947 }, .{ .re = 0.01155985, .im = -0.07560951 }, .{ .re = 0.03635405, .im = -0.09074236 }, .{ .re = 0.06010676, .im = -0.11350308 }, .{ .re = 0.06525529, .im = -0.11200745 }, .{ .re = 0.06694636, .im = -0.08347990 }, .{ .re = 0.08481390, .im = -0.06068820 }, .{ .re = 0.09859436, .im = -0.06115132 }, .{ .re = 0.09932557, .im = -0.07979739 }, .{ .re = 0.10081457, .im = -0.08272135 }, .{ .re = 0.09668805, .im = -0.08844653 }, .{ .re = 0.10037782, .im = -0.08964939 }, .{ .re = 0.11313064, .im = -0.07606134 }, .{ .re = 0.12202165, .im = -0.07387290 }, .{ .re = 0.12588765, .im = -0.07802245 }, .{ .re = 0.11128104, .im = -0.09531067 }, .{ .re = 0.10488192, .im = -0.10965092 }, .{ .re = 0.10835133, .im = -0.12237484 }, .{ .re = 0.10269672, .im = -0.14331681 }, .{ .re = 0.08343735, .im = -0.15752371 }, .{ .re = 0.07943548, .im = -0.16326374 } }});
    }

    // 1e-2 cutoff, Float32
    {
        var block = SinglepoleLowpassFilterBlock(f32).init(0.01);
        var tester = BlockTester.init(&block.block, 1e-6);
        try tester.check(2, &[1]type{
            f32,
        }, .{&[64]f32{ -0.73127151, 0.69486749, 0.52754927, -0.48986191, -0.00912983, -0.10101787, 0.30318594, 0.57744670, -0.81228077, -0.94330502, 0.67153019, -0.13446586, 0.52456015, -0.99578792, -0.10922561, 0.44308007, -0.54247558, 0.89054137, 0.80285490, -0.93882000, -0.94910830, 0.08282494, 0.87829834, -0.23759152, -0.56680119, -0.15576684, -0.94191837, -0.55661666, -0.12422481, -0.00837552, -0.53383112, -0.53826690, -0.56243795, -0.08079307, -0.42043677, -0.95702058, 0.67515594, 0.11290865, 0.28458872, -0.62818748, 0.98508680, 0.71989304, -0.75822008, -0.33460963, 0.44296879, 0.42238355, 0.87288117, -0.15578599, 0.66007137, 0.34061113, -0.39326301, 0.17516121, 0.76495802, 0.69239485, 0.01056764, 0.17800452, -0.93094832, -0.51452005, 0.59480852, -0.17137200, -0.65398520, 0.09759752, 0.40608153, 0.34897169 }}, &[1]type{
            f32,
        }, .{&[64]f32{ -0.01131006, -0.01152324, 0.00773945, 0.00808294, 0.00011536, -0.00159179, 0.00158424, 0.01515536, 0.01105455, -0.01643980, -0.02013462, -0.01120541, -0.00482549, -0.01196437, -0.02868474, -0.02263395, -0.02347111, -0.01736180, 0.00936581, 0.00697322, -0.02244173, -0.03514574, -0.01919358, -0.00869051, -0.02086266, -0.03139278, -0.04739884, -0.06910945, -0.07750180, -0.07715531, -0.08315463, -0.09716382, -0.11118211, -0.11769136, -0.12180303, -0.13933951, -0.13938877, -0.12288868, -0.11293960, -0.11476029, -0.10569055, -0.07605156, -0.07429186, -0.08889584, -0.08447015, -0.06847348, -0.04632248, -0.03379880, -0.02495389, -0.00870515, -0.00925021, -0.01233730, 0.00258448, 0.02504438, 0.03514192, 0.03697139, 0.02418253, 0.00107846, 0.00228687, 0.00876512, -0.00427122, -0.01274436, -0.00456009, 0.00725884 }});
    }
}
